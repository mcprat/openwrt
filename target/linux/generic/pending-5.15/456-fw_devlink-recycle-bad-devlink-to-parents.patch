--- a/drivers/base/core.c
+++ b/drivers/base/core.c
@@ -1870,6 +1870,21 @@ static int fw_devlink_create_devlink(str
 			device_link_add(con, sup_dev,
 					FW_DEVLINK_FLAGS_PERMISSIVE);
 			ret = -EINVAL;
+		} else {
+			struct fwnode_handle *relative;
+
+			pr_debug("%pfwP Picking up consumer links from relatives\n",
+				 sup_handle);
+
+			fwnode_for_each_parent_node(sup_handle, relative)
+				__fwnode_links_move_consumers(relative, sup_handle);
+
+			fwnode_handle_put(relative);
+
+			fwnode_for_each_available_child_node(sup_handle, relative)
+				__fw_devlink_pickup_dangling_consumers(relative, sup_handle);
+
+			fwnode_handle_put(relative);
 		}
 
 		goto out;
@@ -1922,6 +1937,21 @@ static int fw_devlink_create_devlink(str
 		 * again later.
 		 */
 		ret = -EAGAIN;
+
+		if (fwnode_count_parents(sup_handle) > 1) {
+			struct fwnode_handle *new_sup;
+
+			dev_dbg(con, "fwnode linking to parents of supplier %pfwP\n",
+				sup_handle);
+
+			fwnode_for_each_parent_node(sup_handle, new_sup) {
+				if (fwnode_device_is_available(new_sup) &&
+				    fwnode_count_parents(new_sup)) {
+					if (!__fwnode_link_add(con->fwnode, new_sup))
+						ret = -EINVAL;
+				}
+			}
+		}
 	}
 
 out:
