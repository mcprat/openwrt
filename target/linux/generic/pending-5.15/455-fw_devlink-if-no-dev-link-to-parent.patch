--- a/drivers/base/core.c
+++ b/drivers/base/core.c
@@ -1821,6 +1821,9 @@ static int fw_devlink_create_devlink(str
 	struct device *sup_dev;
 	int ret = 0;
 
+	if (sup_handle->flags & FWNODE_FLAG_NOT_DEVICE)
+		return -EINVAL;
+
 	/*
 	 * In some cases, a device P might also be a supplier to its child node
 	 * C. However, this would defer the probe of C until the probe of P
--- a/drivers/of/property.c
+++ b/drivers/of/property.c
@@ -1127,8 +1127,7 @@ static int of_link_to_phandle(struct dev
 	 */
 	sup_dev = get_dev_from_fwnode(&sup_np->fwnode);
 	if (!sup_dev &&
-	    (of_node_check_flag(sup_np, OF_POPULATED) ||
-	     sup_np->fwnode.flags & FWNODE_FLAG_NOT_DEVICE)) {
+	     of_node_check_flag(sup_np, OF_POPULATED)) {
 		pr_debug("Not linking %pOFP to %pOFP - No struct device\n",
 			 con_np, sup_np);
 		of_node_put(sup_np);
