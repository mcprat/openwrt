From 70b989c2800729f1442d0b9ea72ff92cdd211fe6 (util-linux)
From: Petr Uzel <petr.uzel@suse.cz>
Date: Mon, 14 Feb 2011 14:43:27 +0100
Subject: [PATCH] libuuid: rename uuid__generate_* to __uuid_generate_*

Having uuid_generate_time and uuid__generate_time at
the same time is confusing. These functions are exported,
but not part of the official API (used by uuidd only).

Signed-off-by: Petr Uzel <petr.uzel@suse.cz>
---

--- a/misc/uuidd.c
+++ b/misc/uuidd.c
@@ -375,7 +375,7 @@ static void server_loop(const char *sock
 			break;
 		case UUIDD_OP_TIME_UUID:
 			num = 1;
-			uuid__generate_time(uu, &num);
+			__uuid_generate_time(uu, &num);
 			if (debug) {
 				uuid_unparse(uu, str);
 				printf(_("Generated time UUID: %s\n"), str);
@@ -385,7 +385,7 @@ static void server_loop(const char *sock
 			break;
 		case UUIDD_OP_RANDOM_UUID:
 			num = 1;
-			uuid__generate_random(uu, &num);
+			__uuid_generate_random(uu, &num);
 			if (debug) {
 				uuid_unparse(uu, str);
 				printf(_("Generated random UUID: %s\n"), str);
@@ -394,7 +394,7 @@ static void server_loop(const char *sock
 			reply_len = sizeof(uu);
 			break;
 		case UUIDD_OP_BULK_TIME_UUID:
-			uuid__generate_time(uu, &num);
+			__uuid_generate_time(uu, &num);
 			if (debug) {
 				uuid_unparse(uu, str);
 				printf(P_("Generated time UUID %s and "
@@ -415,7 +415,7 @@ static void server_loop(const char *sock
 				num = 1000;
 			if (num*16 > (int) (sizeof(reply_buf)-sizeof(num)))
 				num = (sizeof(reply_buf)-sizeof(num)) / 16;
-			uuid__generate_random((unsigned char *) reply_buf +
+			__uuid_generate_random((unsigned char *) reply_buf +
 					      sizeof(num), &num);
 			if (debug) {
 				printf(_("Generated %d UUID's:\n"), num);
--- a/lib/uuid/gen_uuid.c
+++ b/lib/uuid/gen_uuid.c
@@ -601,7 +601,7 @@ fail:
 #pragma GCC diagnostic pop
 #endif
 
-void uuid__generate_time(uuid_t out, int *num)
+void __uuid_generate_time(uuid_t out, int *num)
 {
 	static unsigned char node_id[6];
 	static int has_init = 0;
@@ -668,11 +668,11 @@ void uuid_generate_time(uuid_t out)
 		return;
 #endif
 
-	uuid__generate_time(out, 0);
+	__uuid_generate_time(out, 0);
 }
 
 
-void uuid__generate_random(uuid_t out, int *num)
+void __uuid_generate_random(uuid_t out, int *num)
 {
 	uuid_t	buf;
 	struct uuid uu;
@@ -700,7 +700,7 @@ void uuid_generate_random(uuid_t out)
 	int	num = 1;
 	/* No real reason to use the daemon for random uuid's -- yet */
 
-	uuid__generate_random(out, &num);
+	__uuid_generate_random(out, &num);
 }
 
 
--- a/lib/uuid/uuidd.h
+++ b/lib/uuid/uuidd.h
@@ -48,7 +48,7 @@
 #define UUIDD_OP_BULK_RANDOM_UUID	5
 #define UUIDD_MAX_OP			UUIDD_OP_BULK_RANDOM_UUID
 
-extern void uuid__generate_time(uuid_t out, int *num);
-extern void uuid__generate_random(uuid_t out, int *num);
+extern void __uuid_generate_time(uuid_t out, int *num);
+extern void __uuid_generate_random(uuid_t out, int *num);
 
 #endif /* _UUID_UUID_H */
